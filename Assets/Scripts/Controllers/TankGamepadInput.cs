//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Prefabs/Controllers/TankGamepadInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TankGamepadInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TankGamepadInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TankGamepadInput"",
    ""maps"": [
        {
            ""name"": ""GamepadControls"",
            ""id"": ""c0dcdffa-c51d-40b8-af2b-f46a9851e5af"",
            ""actions"": [
                {
                    ""name"": ""MoveForward"",
                    ""type"": ""Button"",
                    ""id"": ""7847c1a2-790c-4c61-b1d2-4a8ef1db3949"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveBackward"",
                    ""type"": ""Button"",
                    ""id"": ""fc7bd646-59a5-4e38-9d19-3796daf6f77d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateRight"",
                    ""type"": ""Button"",
                    ""id"": ""828ceea7-020d-4b25-aa68-b12aac9936f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""bbfbb789-4dd3-4720-95cd-7d660ff453ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""2af7d52a-7e64-4fa7-a608-dab188cf783f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomCameraIn"",
                    ""type"": ""Button"",
                    ""id"": ""d4eaac3d-959a-4501-89cb-05bcae728391"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomCameraOut"",
                    ""type"": ""Button"",
                    ""id"": ""aa4b1073-4484-4ccb-b046-a99a552310a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraLeft&Right"",
                    ""type"": ""Value"",
                    ""id"": ""723ab080-b781-43f6-8778-f23b7e75180a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraUp&Down"",
                    ""type"": ""Value"",
                    ""id"": ""b82f715e-4b38-492e-a080-7b5645d51fbf"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleMenuEnabled"",
                    ""type"": ""Button"",
                    ""id"": ""1e317b9b-e900-4be9-a661-988d9a792144"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2e4da983-d099-4e6c-b100-4f975981a871"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20bad634-e083-4d2c-94e9-fdf1751dac2b"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a02e352-3928-4197-94cc-40e810a11b31"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4369676a-a3a3-4779-81fe-d22b71a310d4"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84d64625-8d9f-4f22-a535-4ba85b10cc61"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b73ed92c-7da8-4bff-b0c9-ff9118adb0b4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCameraIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d60c784-a3a7-4e81-87f0-9f00f181ffe8"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCameraOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61b18075-fe75-46b0-98f2-0a4debd99c56"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLeft&Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e801cc45-4c31-4485-9533-7da0aaeee564"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraUp&Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20e44f34-02c5-476e-85f9-d40c71c2c081"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMenuEnabled"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GamepadControls
        m_GamepadControls = asset.FindActionMap("GamepadControls", throwIfNotFound: true);
        m_GamepadControls_MoveForward = m_GamepadControls.FindAction("MoveForward", throwIfNotFound: true);
        m_GamepadControls_MoveBackward = m_GamepadControls.FindAction("MoveBackward", throwIfNotFound: true);
        m_GamepadControls_RotateRight = m_GamepadControls.FindAction("RotateRight", throwIfNotFound: true);
        m_GamepadControls_RotateLeft = m_GamepadControls.FindAction("RotateLeft", throwIfNotFound: true);
        m_GamepadControls_Shoot = m_GamepadControls.FindAction("Shoot", throwIfNotFound: true);
        m_GamepadControls_ZoomCameraIn = m_GamepadControls.FindAction("ZoomCameraIn", throwIfNotFound: true);
        m_GamepadControls_ZoomCameraOut = m_GamepadControls.FindAction("ZoomCameraOut", throwIfNotFound: true);
        m_GamepadControls_CameraLeftRight = m_GamepadControls.FindAction("CameraLeft&Right", throwIfNotFound: true);
        m_GamepadControls_CameraUpDown = m_GamepadControls.FindAction("CameraUp&Down", throwIfNotFound: true);
        m_GamepadControls_ToggleMenuEnabled = m_GamepadControls.FindAction("ToggleMenuEnabled", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamepadControls
    private readonly InputActionMap m_GamepadControls;
    private IGamepadControlsActions m_GamepadControlsActionsCallbackInterface;
    private readonly InputAction m_GamepadControls_MoveForward;
    private readonly InputAction m_GamepadControls_MoveBackward;
    private readonly InputAction m_GamepadControls_RotateRight;
    private readonly InputAction m_GamepadControls_RotateLeft;
    private readonly InputAction m_GamepadControls_Shoot;
    private readonly InputAction m_GamepadControls_ZoomCameraIn;
    private readonly InputAction m_GamepadControls_ZoomCameraOut;
    private readonly InputAction m_GamepadControls_CameraLeftRight;
    private readonly InputAction m_GamepadControls_CameraUpDown;
    private readonly InputAction m_GamepadControls_ToggleMenuEnabled;
    public struct GamepadControlsActions
    {
        private @TankGamepadInput m_Wrapper;
        public GamepadControlsActions(@TankGamepadInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveForward => m_Wrapper.m_GamepadControls_MoveForward;
        public InputAction @MoveBackward => m_Wrapper.m_GamepadControls_MoveBackward;
        public InputAction @RotateRight => m_Wrapper.m_GamepadControls_RotateRight;
        public InputAction @RotateLeft => m_Wrapper.m_GamepadControls_RotateLeft;
        public InputAction @Shoot => m_Wrapper.m_GamepadControls_Shoot;
        public InputAction @ZoomCameraIn => m_Wrapper.m_GamepadControls_ZoomCameraIn;
        public InputAction @ZoomCameraOut => m_Wrapper.m_GamepadControls_ZoomCameraOut;
        public InputAction @CameraLeftRight => m_Wrapper.m_GamepadControls_CameraLeftRight;
        public InputAction @CameraUpDown => m_Wrapper.m_GamepadControls_CameraUpDown;
        public InputAction @ToggleMenuEnabled => m_Wrapper.m_GamepadControls_ToggleMenuEnabled;
        public InputActionMap Get() { return m_Wrapper.m_GamepadControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamepadControlsActions set) { return set.Get(); }
        public void SetCallbacks(IGamepadControlsActions instance)
        {
            if (m_Wrapper.m_GamepadControlsActionsCallbackInterface != null)
            {
                @MoveForward.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnMoveForward;
                @MoveForward.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnMoveForward;
                @MoveForward.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnMoveForward;
                @MoveBackward.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnMoveBackward;
                @MoveBackward.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnMoveBackward;
                @MoveBackward.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnMoveBackward;
                @RotateRight.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnRotateRight;
                @RotateRight.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnRotateRight;
                @RotateRight.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnRotateRight;
                @RotateLeft.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnRotateLeft;
                @RotateLeft.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnRotateLeft;
                @RotateLeft.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnRotateLeft;
                @Shoot.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnShoot;
                @ZoomCameraIn.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnZoomCameraIn;
                @ZoomCameraIn.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnZoomCameraIn;
                @ZoomCameraIn.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnZoomCameraIn;
                @ZoomCameraOut.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnZoomCameraOut;
                @ZoomCameraOut.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnZoomCameraOut;
                @ZoomCameraOut.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnZoomCameraOut;
                @CameraLeftRight.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnCameraLeftRight;
                @CameraLeftRight.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnCameraLeftRight;
                @CameraLeftRight.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnCameraLeftRight;
                @CameraUpDown.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnCameraUpDown;
                @CameraUpDown.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnCameraUpDown;
                @CameraUpDown.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnCameraUpDown;
                @ToggleMenuEnabled.started -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnToggleMenuEnabled;
                @ToggleMenuEnabled.performed -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnToggleMenuEnabled;
                @ToggleMenuEnabled.canceled -= m_Wrapper.m_GamepadControlsActionsCallbackInterface.OnToggleMenuEnabled;
            }
            m_Wrapper.m_GamepadControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveForward.started += instance.OnMoveForward;
                @MoveForward.performed += instance.OnMoveForward;
                @MoveForward.canceled += instance.OnMoveForward;
                @MoveBackward.started += instance.OnMoveBackward;
                @MoveBackward.performed += instance.OnMoveBackward;
                @MoveBackward.canceled += instance.OnMoveBackward;
                @RotateRight.started += instance.OnRotateRight;
                @RotateRight.performed += instance.OnRotateRight;
                @RotateRight.canceled += instance.OnRotateRight;
                @RotateLeft.started += instance.OnRotateLeft;
                @RotateLeft.performed += instance.OnRotateLeft;
                @RotateLeft.canceled += instance.OnRotateLeft;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @ZoomCameraIn.started += instance.OnZoomCameraIn;
                @ZoomCameraIn.performed += instance.OnZoomCameraIn;
                @ZoomCameraIn.canceled += instance.OnZoomCameraIn;
                @ZoomCameraOut.started += instance.OnZoomCameraOut;
                @ZoomCameraOut.performed += instance.OnZoomCameraOut;
                @ZoomCameraOut.canceled += instance.OnZoomCameraOut;
                @CameraLeftRight.started += instance.OnCameraLeftRight;
                @CameraLeftRight.performed += instance.OnCameraLeftRight;
                @CameraLeftRight.canceled += instance.OnCameraLeftRight;
                @CameraUpDown.started += instance.OnCameraUpDown;
                @CameraUpDown.performed += instance.OnCameraUpDown;
                @CameraUpDown.canceled += instance.OnCameraUpDown;
                @ToggleMenuEnabled.started += instance.OnToggleMenuEnabled;
                @ToggleMenuEnabled.performed += instance.OnToggleMenuEnabled;
                @ToggleMenuEnabled.canceled += instance.OnToggleMenuEnabled;
            }
        }
    }
    public GamepadControlsActions @GamepadControls => new GamepadControlsActions(this);
    public interface IGamepadControlsActions
    {
        void OnMoveForward(InputAction.CallbackContext context);
        void OnMoveBackward(InputAction.CallbackContext context);
        void OnRotateRight(InputAction.CallbackContext context);
        void OnRotateLeft(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnZoomCameraIn(InputAction.CallbackContext context);
        void OnZoomCameraOut(InputAction.CallbackContext context);
        void OnCameraLeftRight(InputAction.CallbackContext context);
        void OnCameraUpDown(InputAction.CallbackContext context);
        void OnToggleMenuEnabled(InputAction.CallbackContext context);
    }
}
